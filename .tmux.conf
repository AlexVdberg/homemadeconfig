# start with window 1 (instead of 0)
set -g base-index 1

# start with pane 1
set -g pane-base-index 1

# split panes using | and -, make sure they open in the same path
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

unbind '"'
unbind %

# open new windows in the current path
bind c new-window -c "#{pane_current_path}"

# reload config file
bind r source-file ~/.tmux.conf

# shorten command delay
set -sg escape-time 1

# mouse control (clickable windows, panes, resizeable panes)
set -g mouse on

# use Alt-arrow keys without prefix key to switch panes
bind -n M-left select-pane -L
bind -n M-right select-pane -R
bind -n M-up select-pane -U
bind -n M-down select-pane -D

# enable vi mode keys
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel

# set default terminal mode to 256 colors and pass vim colors
#set -g default-terminal "screen-256color"

# Get tmux colors working in alacritty
set -g default-terminal "tmux-256color"
set -ag terminal-overrides ",xterm-256color:RGB"
# I have also seen this as:
#set-option -sa terminal-overrides ",xterm*:Tc"

# vim-tmux-navigator
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
#is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?)(diff)?$'"
#bind-key -n 'M-h' if-shell "$is_vim" 'send-keys M-h'  'select-pane -L'
#bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j'  'select-pane -D'
#bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k'  'select-pane -U'
#bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l'  'select-pane -R'
#tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
#if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
#    "bind-key -n 'M-\\' if-shell \"$is_vim\" 'send-keys M-\\'  'select-pane -l'"
#if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
#    "bind-key -n 'M-\\' if-shell \"$is_vim\" 'send-keys M-\\\\'  'select-pane -l'"
#
#bind-key -T copy-mode-vi 'M-h' select-pane -L
#bind-key -T copy-mode-vi 'M-j' select-pane -D
#bind-key -T copy-mode-vi 'M-k' select-pane -U
#bind-key -T copy-mode-vi 'M-l' select-pane -R
#bind-key -T copy-mode-vi 'M-\' select-pane -l
